forall (a : Type) .
forall (b : Type) .
forall (c : Type) .
forall (d : Type) .
forall (e : Type) .
forall (f : Type) .
forall (g : Type) .
forall (h : Type) .
forall (i : Type) .
forall (j : Type) .
forall (k : Type) .
forall (l : Type) .
forall (m : Type) .
forall (n : Type) .
forall (o : Type) .
forall (p : Type) .
forall (q : Type) .
forall (r : Type) .
forall (s : Type) .
  { all: (a -> Bool) -> List a -> Bool
  , any: (b -> Bool) -> List b -> Bool
  , drop: Natural -> List c -> List c
  , fold: { cons: e -> d -> d, nil: d } -> List e -> d
  , generate: Natural -> (Natural -> f) -> List f
  , head: List g -> Optional g
  , index: Natural -> List h -> Optional h
  , indexed: List i -> List { index: Natural, value: i }
  , last: List j -> Optional j
  , length: List k -> Natural
  , map: (m -> l) -> List m -> List l
  , null: List n -> Bool
  , reject: (o -> Bool) -> List o -> List o
  , replicate: Natural -> p -> List p
  , reverse: List q -> List q
  , select: (r -> Bool) -> List r -> List r
  , take: Natural -> List s -> List s
  }
